// Synse CLI
// Copyright (c) 2019 Vapor IO
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

package utils

import (
	"encoding/json"

	"gopkg.in/yaml.v2"
)

// ObjToYAML converts an object to YAML, first marshalling it to JSON.
//
// Typically, one would be able to use yaml.Marshal, but since the autogenerated
// gRPC/protobuf code does not include tags for YAML, the "private" XXX_ prefixed
// fields of the gRPC object are serialized out to YAML. The objects have a JSON
// tag, so by marshaling to JSON first, we can effectively use the JSON tag as
// a YAML tag as well.
func ObjToYAML(obj interface{}) ([]byte, error) {
	j, err := json.Marshal(obj)
	if err != nil {
		return nil, err
	}

	var intermediary interface{}
	if err := yaml.Unmarshal(j, &intermediary); err != nil {
		return nil, err
	}
	return yaml.Marshal(intermediary)
}
