#!/usr/bin/env groovy

pipeline {

  agent any

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Download Deps') {
          steps {
            script {
              docker.image('vaporio/jenkins-agent-golang:latest').inside() {
                sh 'go mod download'
              }
            }
          }
        }

    stage('Lint') {
          steps {
            script {
              docker.image('vaporio/jenkins-agent-golang:latest').inside() {
                sh 'golint -set_exit_status ./cmd/... ./pkg/...'
              }
            }
          }
        }

    stage('Test') {
      steps {
        script {
          docker.image('vaporio/jenkins-agent-golang:latest').inside() {
            sh 'CGO_ENABLED=0 go test -v -covermode=atomic ./pkg/...'
          }
        }
      }
    }

    stage('Snapshot Build') {
      steps {
        script {
          /* This replicates some of what the docker agent would do if this were
             running natively in kube. We would version these same params in
             the agent config. This is a bit of a phaux pre-dep test to getting
             agents running in kube. the containers are acting just like the
             host agent would, but in spurts.
             Note: the importance of the --group-add docker in the parameters.
             Without it, docker in agent is mysteriously permission
             locked despite having a GID present in the container.
          */
          docker.image('vaporio/jenkins-agent-golang:latest').inside('-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --group-add docker') {
            sh 'goreleaser release --snapshot --skip-publish --rm-dist'
          }
        }
      }
    }

    stage('Tagged Release') {
      when {
        // example matches: 1.2.3, 1.2.3-dev
        tag pattern: '(0|[1-9]*)\\.(0|[1-9]*)\\.(0|[1-9]*)(-(\\S*))?$', comparator: "REGEXP"
      }
      environment {
        GITHUB_TOKEN = credentials('vio-bot-gh-token')
      }
      steps {
        script {
          docker.image('vaporio/jenkins-agent-golang:latest').inside('-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -e GITHUB_TOKEN=$GITHUB_TOKEN --group-add docker') {
            withDockerRegistry(registry: [credentialsId: 'vio-docker-hub']) {
              sh 'GOVERSION=$(go version | awk '{print $3}') goreleaser release --rm-dist'
            }
          }
        }
      }
    }
  }
}
